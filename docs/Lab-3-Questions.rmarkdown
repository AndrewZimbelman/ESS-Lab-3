---
title: "ESS Lab 3"
format: html
editor: visual
---

##Question 1:\`\`\`

```{r}
library(tidyverse); library(flextable)
data = read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
covid_data = data
```

##Question 2:

```{r}
text = date("2021-02-01")
my.date <- as.Date(text)
class(my.date)
my.state= "Colorado"
Colorado_data = covid_data |>
  filter(state == my.state)|>
  group_by(county)|>
  arrange(date)|>
  mutate(new_cases = cases - lag(cases))|>
  mutate(new_deaths = deaths - lag(deaths))|>
  ungroup()
Colorado_data|>
  filter(date == my.date)|>
  slice_max(cases, n=5) |>
  select(Date = date, County = county, Cases = cases) |>
  flextable() |>
  set_caption("Most Total Cases")
View(Cumulative_Colorado_cases)
Colorado_data|>
  filter(date == my.date)|>
  slice_max(new_cases, n=5) |>
  select(Date = date, County = county, Cases = new_cases) |>
  flextable() |>
  set_caption("Most New Cases")
```

##Question 3:

```{r}
pop_data = read_csv('https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv')
sprintf("%02s", (pop_data$STATE) , "%03s", (pop_data$COUNTY))

  fip_code = paste(pop_data$STATE, pop_data$COUNTY, sel =" ")
pop_data |>
  mutate(FIP = fip_code)
pop_data = pop_data |>
  filter(COUNTY > '000')
POP_data = pop_data |>
  select(contains('NAME'), contains('2021')) |>
  mutate(fip = paste0(pop_data$STATE,pop_data$COUNTY, sel = ""))
names(POP_data)
dim(POP_data)
#2. some of the common names are STNAME, CTYNAME, DEATHS2021, with 3144 rows & 19 columns 
#3. The range is from 741 to 737287 which is a total range of 736546
CO_POP_data = POP_data |>
  filter(STNAME == 'Colorado')
max(CO_POP_data$POPESTIMATE2021)
min(CO_POP_data$POPESTIMATE2021)
POP_data = POP_data|>
  rename('fips' = 'fip')
#range = 737287 - 741 = 736546
Covid_Population_Data = inner_join(POP_data,Colorado_data, by = 'fips')
new_data = Covid_Population_Data |>
  group_by(date)|>
  select(date = date, County = county, Cases = cases, Population = POPESTIMATE2021, Deaths = deaths, New_Cases = new_cases, New_Deaths = new_deaths)|>
  na.omit(New_cases , New_Deaths)|>
  mutate(Per_capita_cum = (Cases/Population))|>
  mutate(Per_capita_new_case = (New_Cases/Population))|>
  mutate(Per_capita_new_deaths = (New_Deaths / Population))

flex_table_new <-new_data|>
  filter(date == my.date)|>
  select(date,County,Per_capita_cum)|>
  slice_max(Per_capita_cum, n = 5)|>
  flextable::flextable()|>
   flextable::set_caption('5 Highest Cumulative Covid Cases Per Capita in Colorado Counties')
flex_table_new <- set_header_labels(flex_table_new, date = "Date",
                    Per_capita_cum = "Cumulative Population")
flex_table_new
new_flex_table <- new_data|>
  filter(date == my.date)|>
  select(date,County,Per_capita_new_case)|>
  slice_max(Per_capita_new_case, n = 5)|>
  flextable::flextable()|>
  flextable::set_caption('5 Highest Counties for New Covid Cases Per Capita in Colorado')
new_flex_table <- set_header_labels(new_flex_table, date = "Date",
                                    Per_capita_new_case = "New Cases                                      Per Capita")
new_flex_table
view(new_flex_table)
new_flex_table
```

##Question 4

```{r}

  start_date = as.Date(2022-05-13)
  end_date = as.Date(2022-04-30)
 Watchlist_flextable = Covid_Population_Data|>
    filter(date >= (max(date - 14)))|>
    select(county,date,new_cases,POPESTIMATE2021)|>
    group_by(county)|>
   mutate(POPESTIMATE2021 = rollmean((POPESTIMATE2021/100000), k = 13))|>
    summarise(new_cases = sum((new_cases)/POPESTIMATE2021))|>
    slice_max(new_cases, n= 5) |>
    flextable::flextable() |>
    flextable::set_caption('Watch List Covid Counties')
 Watchlist_flextable <- set_header_labels(Watchlist_flextable, county = 'County', new_cases = 'New Cases')
Watchlist_flextable
```

##Question 5

```{r}
  death_date = as.Date("2022-01-30")
  year = lubridate::year(death_date)

  desired_death_rate = Covid_Population_Data |>
  filter( '2020-12-31' < date & date < '2022-01-01')|>
  select(cases,county,date,DEATHS2021,deaths)|>
  group_by(county)|>
  mutate(death_rate = 100*(sum(deaths)/sum(DEATHS2021)))|>
  filter(death_rate >= 20)|>
  summarise(death_rate,county,date)
 
    
desired_death_rate |>
   ggplot(aes(y = death_rate)) +
   facet_wrap("county") +
  geom_bar(aes(color = county))

    
  
```

##Question 6

```{r}
daily_new_cases = covid_data |>
  filter(state %in% c("Colorado","New York", "Alabama", "Ohio"))|>
  mutate(new_cases = cases - lag(cases))
  group_by(date)|>
  summarise(new_cases = sum(new_cases),state,cases)|>
  ungroup()
rolling_mean_cases = covid_data |> 
  mutate(new_cases = cases - lag(cases))|>
  select(new_cases, state, date)|>
  group_by(state) |>
  summarise(date, new_cases = rollmean(new_cases, k = 7, fill = 0, align = "center", na.pad = FALSE))|>
  slice_max(new_cases)
state_data|>
  ggplot( aes(x = date, y = new_cases)) +
  facet_wrap("state") +
  geom_line(aes(color = state))
  ggpplot(aes(x = date, y = ))

```

```{r}

```
